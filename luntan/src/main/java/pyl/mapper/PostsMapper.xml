<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://www.tablego.cn
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author: bianj
    Email: tablego@qq.com
    Version: 6.0.0
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- POSTS -->
<mapper namespace="pyl.mapper.PostsMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="postsMap" type="Posts">
        <id column="POSTS_ID" property="postsId" jdbcType="INTEGER" />
        <result column="POSTS_NO" property="postsNo" jdbcType="VARCHAR" />
        <result column="POSTS_TITLE" property="postsTitle" jdbcType="VARCHAR" />
        <result column="SMODULE_ID" property="smoduleId" jdbcType="INTEGER" />
        <result column="SMODULE_NAME" property="smoduleName" jdbcType="VARCHAR" />
        <result column="IP" property="ip" jdbcType="VARCHAR" />
        <result column="TOP" property="top" jdbcType="VARCHAR" />
        <result column="HOT" property="hot" jdbcType="VARCHAR" />
        <result column="PAGE_VIEW" property="pageView" jdbcType="INTEGER" />
        <result column="REWARD" property="reward" jdbcType="INTEGER" />
        <result column="REPLY_NUM" property="replyNum" jdbcType="INTEGER" />
        <result column="U_EMAIL" property="uEmail" jdbcType="VARCHAR" />
        <result column="UPTIME" property="uptime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表所有字段 -->
    <sql id="allColumns">
        POSTS_ID, POSTS_NO, POSTS_TITLE, SMODULE_ID, SMODULE_NAME, IP, TOP, HOT, 
        PAGE_VIEW, REWARD, REPLY_NUM, U_EMAIL, UPTIME
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findPostsAll" resultMap="postsMap">
        SELECT
        <include refid="allColumns" />
        FROM POSTS
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findPostsByCondition" resultMap="postsMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM POSTS WHERE 1 = 1
        <if test="postsNo != null and postsNo != ''">
            AND POSTS_NO LIKE CONCAT('%', #{postsNo}, '%')
        </if>
        <if test="postsTitle != null and postsTitle != ''">
            AND POSTS_TITLE LIKE CONCAT('%', #{postsTitle}, '%')
        </if>
        <if test="smoduleId != null">
            AND SMODULE_ID = #{smoduleId}
        </if>
        <if test="smoduleName != null and smoduleName != ''">
            AND SMODULE_NAME LIKE CONCAT('%', #{smoduleName}, '%')
        </if>
        <if test="ip != null and ip != ''">
            AND IP LIKE CONCAT('%', #{ip}, '%')
        </if>
        <if test="top != null and top != ''">
            AND TOP LIKE CONCAT('%', #{top}, '%')
        </if>
        <if test="hot != null and hot != ''">
            AND HOT LIKE CONCAT('%', #{hot}, '%')
        </if>
        <if test="pageView != null">
            AND PAGE_VIEW = #{pageView}
        </if>
        <if test="reward != null">
            AND REWARD = #{reward}
        </if>
        <if test="replyNum != null">
            AND REPLY_NUM = #{replyNum}
        </if>
        <if test="uEmail != null and uEmail != ''">
            AND U_EMAIL LIKE CONCAT('%', #{uEmail}, '%')
        </if>
        <if test="uptime != null and uptime != ''">
            AND UPTIME = #{uptime}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findPostsByIds" resultMap="postsMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM POSTS WHERE POSTS_ID IN
        <foreach collection="list" index="index" item="postsId" open="(" separator="," close=")">
            #{postsId}
        </foreach>
    </select>
    
    <!-- 插入数据 
    <insert id="insertPosts" parameterType="Posts">
        INSERT INTO POSTS (
            POSTS_NO, POSTS_TITLE, SMODULE_ID, SMODULE_NAME, IP, TOP, HOT, 
            PAGE_VIEW,CONTENT
        ) VALUES (
            #{postsNo},
            #{postsTitle},
            #{smoduleId},
            #{smoduleName},
            #{ip},
            #{top},
            #{hot},
            #{pageView}
            
        )
    </insert>-->
    
    <!-- 插入数据 -->
    <insert id="insertPosts" parameterType="Posts">
        INSERT INTO POSTS (
            POSTS_NO, POSTS_TITLE, SMODULE_ID, SMODULE_NAME, IP, REWARD, U_EMAIL, UPTIME
        ) VALUES (
            #{postsNo},
            #{postsTitle},
            #{smoduleId},
            #{smoduleName},
            #{ip},
            #{reward},
            #{uEmail},
            #{uptime}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updatePosts" parameterType="map">
        UPDATE POSTS
        <set>
            <if test="postsNo != null">
                POSTS_NO = #{postsNo},
            </if>
            <if test="postsTitle != null">
                POSTS_TITLE = #{postsTitle},
            </if>
            <if test="smoduleId != null">
                SMODULE_ID = #{smoduleId},
            </if>
            <if test="smoduleName != null">
                SMODULE_NAME = #{smoduleName},
            </if>
            <if test="ip != null">
                IP = #{ip},
            </if>
            <if test="top != null">
                TOP = #{top},
            </if>
            <if test="hot != null">
                HOT = #{hot},
            </if>
            <if test="pageView != null">
                PAGE_VIEW = #{pageView}
            </if>
            <if test="reward != null">
                REWARD = #{reward},
            </if>
            <if test="replyNum != null">
                REPLY_NUM = #{replyNum},
            </if>
            <if test="uEmail != null">
                U_EMAIL = #{uEmail}
            </if>
            <if test="uptime != null">
                UPTIME = #{uptime}
            </if>
            
        </set>
        WHERE POSTS_ID = #{postsId}
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deletePostsById" parameterType="int">
        DELETE FROM POSTS WHERE POSTS_ID = #{postsId}
    </delete>
    
</mapper>