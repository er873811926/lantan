<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://www.tablego.cn
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author: bianj
    Email: tablego@qq.com
    Version: 6.0.0
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ROLE_RELATION -->
<mapper namespace="pyl.mapper.RoleRelationMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="roleRelationMap" type="RoleRelation">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
        <result column="UEMAIL" property="uemail" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, ROLE_ID, ROLE_NAME, UEMAIL
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findRoleRelationAll" resultMap="roleRelationMap">
        SELECT
        <include refid="allColumns" />
        FROM ROLE_RELATION
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findRoleRelationByCondition" resultMap="roleRelationMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM ROLE_RELATION WHERE 1 = 1
        <if test="roleId != null">
            AND ROLE_ID = #{roleId}
        </if>
        <if test="roleName != null and roleName != ''">
            AND ROLE_NAME LIKE CONCAT('%', #{roleName}, '%')
        </if>
        <if test="uemail != null and uemail != ''">
            AND UEMAIL = #{uemail}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findRoleRelationByIds" resultMap="roleRelationMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM ROLE_RELATION WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertRoleRelation" parameterType="RoleRelation">
        INSERT INTO ROLE_RELATION (
              ROLE_NAME, UEMAIL
        ) VALUES (
            
            #{roleName},
            #{uemail}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateRoleRelation" parameterType="map">
        UPDATE ROLE_RELATION
        <set>
            <if test="roleId != null">
                ROLE_ID = #{roleId},
            </if>
            <if test="roleName != null">
                ROLE_NAME = #{roleName},
            </if>
            <if test="uemail != null">
                UEMAIL = #{uemail}
            </if>
        </set>
        WHERE ID = #{id}
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteRoleRelationById" parameterType="int">
        DELETE FROM ROLE_RELATION WHERE ID = #{id}
    </delete>
    
</mapper>