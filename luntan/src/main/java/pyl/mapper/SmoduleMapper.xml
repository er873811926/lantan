<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://www.tablego.cn
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author: bianj
    Email: tablego@qq.com
    Version: 6.0.0
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SMODULE -->
<mapper namespace="pyl.mapper.SmoduleMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="smoduleMap" type="Smodule">
        <id column="SMODULE_ID" property="smoduleId" jdbcType="INTEGER" />
        <result column="SMODULE_NAME" property="smoduleName" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表所有字段 -->
    <sql id="allColumns">
        SMODULE_ID, SMODULE_NAME
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findSmoduleAll" resultMap="smoduleMap">
        SELECT
        <include refid="allColumns" />
        FROM SMODULE
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findSmoduleByCondition" resultMap="smoduleMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM SMODULE WHERE 1 = 1
        <if test="smoduleName != null and smoduleName != ''">
            AND SMODULE_NAME LIKE CONCAT('%', #{smoduleName}, '%')
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findSmoduleByIds" resultMap="smoduleMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM SMODULE WHERE SMODULE_ID IN
        <foreach collection="list" index="index" item="smoduleId" open="(" separator="," close=")">
            #{smoduleId}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertSmodule" parameterType="Smodule">
        INSERT INTO SMODULE (
             SMODULE_NAME
        ) VALUES (
            #{smoduleName}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateSmodule" parameterType="map">
        UPDATE SMODULE
        <set>
            <if test="smoduleName != null">
                SMODULE_NAME = #{smoduleName}
            </if>
        </set>
        WHERE SMODULE_ID = #{smoduleId}
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteSmoduleById" parameterType="int">
        DELETE FROM SMODULE WHERE SMODULE_ID = #{smoduleId}
    </delete>
    
</mapper>