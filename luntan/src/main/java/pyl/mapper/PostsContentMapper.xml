<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://www.tablego.cn
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author: bianj
    Email: tablego@qq.com
    Version: 6.0.0
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- POSTS_CONTENT -->
<mapper namespace="pyl.mapper.PostsContentMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="postsContentMap" type="PostsContent">
        <id column="POSTS_CONTENT_ID" property="postsContentId" jdbcType="INTEGER" />
        <result column="POSTS_NO" property="postsNo" jdbcType="VARCHAR" />
        <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表所有字段 -->
    <sql id="allColumns">
        POSTS_CONTENT_ID, POSTS_NO, CONTENT
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findPostsContentAll" resultMap="postsContentMap">
        SELECT
        <include refid="allColumns" />
        FROM POSTS_CONTENT
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findPostsContentByCondition" resultMap="postsContentMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM POSTS_CONTENT WHERE 1 = 1
        <if test="postsNo != null and postsNo != ''">
            AND POSTS_NO LIKE CONCAT('%', #{postsNo}, '%')
        </if>
        <if test="content != null and content != ''">
            AND CONTENT LIKE CONCAT('%', #{content}, '%')
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findPostsContentByIds" resultMap="postsContentMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM POSTS_CONTENT WHERE POSTS_CONTENT_ID IN
        <foreach collection="list" index="index" item="postsContentId" open="(" separator="," close=")">
            #{postsContentId}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertPostsContent" parameterType="PostsContent">
        INSERT INTO POSTS_CONTENT (
             POSTS_NO, CONTENT
        ) VALUES (
           
            #{postsNo},
            #{content}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updatePostsContent" parameterType="map">
        UPDATE POSTS_CONTENT
        <set>
            <if test="postsNo != null">
                POSTS_NO = #{postsNo},
            </if>
            <if test="content != null">
                CONTENT = #{content}
            </if>
        </set>
        WHERE POSTS_CONTENT_ID = #{postsContentId}
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deletePostsContentById" parameterType="int">
        DELETE FROM POSTS_CONTENT WHERE POSTS_CONTENT_ID = #{postsContentId}
    </delete>
    
</mapper>